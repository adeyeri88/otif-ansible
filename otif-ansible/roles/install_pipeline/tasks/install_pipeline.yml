---
# tasks file for install_pipeline


- name: Testing services dependencies - Zookeeper, Kafka,  MongoDB & Crawler Admin, PostgreSQL
  wait_for:
    host: "{{ item.host }}"
    port: "{{ item.port }}"
    delay: 5
    timeout: 10
    state: started
  with_items:
    - { host: "{{zookeeper_hostname}}", port: 2181 }
    - { host: "{{kafka_hostname}}", port: 9092 }
    - { host: "{{mongodb_hostname}}", port: 27017 }
    - { host: "{{wsm_crawler_hostname}}", port: 10010 }
    - { host: "{{pipeline_hostname}}", port: 5432 }
  register: wait

- name: Create InfoFusion database if not already there (mandatory for the installaltion)
  postgresql_db:
    login_user: "postgres"
    login_password: "{{psql_admin_password}}"
    name: "{{master_dbname}}"
    owner: "{{master_username}}"
    encoding: UTF-8
    state: present

- debug:
    msg: "Pipeline will be installed using '{{ pipeline_installer.path }}'"

- debug:
    msg: "Pipeline will be installed in {{ pipeline_installation_path }}"

- pause:
    prompt: "Ready to start installation. Press any key."
  when: with_pause 

- name: Executing Pipeline installer in console mode
  expect:
    command: "{{ pipeline_installer.path }} -i console"
    echo: yes
    timeout: 120
    responses:
      .*to reach the end of this text.*: "skip"
      PRESS \<ENTER\> TO CONTINUE: ""
      .*DO YOU ACCEPT THE TERMS.*: "Y"
      .*ENTER AN ABSOLUTE PATH.*: "{{ pipeline_installation_path }}"
      .*IS THIS CORRECT.*: "Y"
      .*Current Host.*: "{{ pipeline_hostname }}"
      .*Zookeeper Host.*: "{{ zookeeper_hostname }}"
      .*components to enable.*: "1,2,4"
      .*OTCA Host.*: "{{ text_mining_hostname }}"
      .*Kafka Host.*: "{{ kafka_hostname }}"
      .*Select the crawler.*: "1,2"
      .*Enter the host for MongoDB.*: "{{ mongodb_hostname }}"
      .*Enter the MongoDB database name.*: "{{ master_dbname }}"
      .*Enter the MongoDB user name.*: "{{ master_username }}"
      .*Please provide a password for the MongoDB user.*: "{{ master_password }}"
      .*Web Crawler Admin Host.*: "{{ wsm_crawler_hostname }}"
      .*Select the type of database driver.*: "1"
      .*Enter the database host.*: "{{ pipeline_hostname }}"
      .*Enter the database name.*: "{{ master_dbname }}"
      .*Enter the database user.*: "{{ master_username }}"
      .*Please provide a password for the database user.*: "{{ master_password }}"
      .*TO EXIT THE INSTALLER.*: ""
      .*TO ACCEPT THE DEFAULT.*: ""
  register: installer_output

- debug:
    var: installer_output.stdout_lines

- pause:
    prompt: "Installation completed. Pipeline will now be configured."
  when: with_pause
