---


- name: Install license key file (etc/tme.license)
  copy:
    src: esnecil.emt
    dest: "{{ tme_target_dir }}/{{ tme_package_basename }}/etc/tme.license"
    owner: "{{ master_username }}"
    group: "{{ master_username }}"
    mode: 0774
    backup: yes

- name: patch tme script to run on CentoOS and rely on existing JAVA_HOME
  become: true
  lineinfile:
    dest: "{{ tme_target_dir }}/{{ tme_package_basename }}/bin/tme"
    regexp: '^[ ]*JAVA_HOME=(.*)$'
    line: '#JAVA_HOME=\1'
    backrefs: true

- name: Register Text Mining Engine into Zookeeper
  become: true
  lineinfile:
    dest: "{{ tme_target_dir }}/{{ tme_package_basename }}/etc/tme.properties"
    regexp: '^(.*{{ item.lookup }}.*)=(.*)$'
    line: '\1={{ item.fqdn }}'
    backrefs: true
  with_items:
    - { lookup: "zookeeper.ensemble", fqdn: "{{ zookeeper_fqdn }}:2181" }
    - { lookup: "service.host", fqdn: "{{ text_mining_fqdn }}" }

- name: Enable Text Mining registration into ZK
  become: true
  lineinfile:
    dest: "{{ tme_target_dir }}/{{ tme_package_basename }}/etc/tme.wrapper.conf"
    regexp: "^# wrapper.java.additional.13=-Dspring.profiles.active=service-registration"
    line: "wrapper.java.additional.13=-Dspring.profiles.active=service-registration"

- name: Create services for Text Mining Engine
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: otif-text-mining.service.j2, dest: /etc/systemd/system/otif-text-mining.service }

- name: Open port 40002
  ignore_errors: true
  become: true
  firewalld:
    zone: public
    port: "{{item}}/tcp"
    permanent: true
    immediate: true
    state: enabled
  with_items:
    - "40002"
