---

- name: Reconfigure hostame reference in dashboard-api.properties
  become: true
  lineinfile:
    dest: "{{ dashboard_installation_path }}/etc/{{ item.file }}"
    regexp: "{{item.regexp }}"
    line: "{{item.line}}"
  with_items:
    - { file: "dashboard-api.properties", regexp: 'dashboard\.persistence\.pool\.properties\.url=', line: "dashboard.persistence.pool.properties.url=jdbc:postgresql://{{ dashboard_hostname }}:5432/magellan_dashboard" } 	

- name: Make sure PostgreSQL is running
  systemd:
    state: started
    enabled: yes
    name: "{{ item.name }}"
  with_items:
    - { name: postgresql-9.6.service }

- name: Wait until PostgreSQL is listening on ports 5432
  wait_for:
    host: "{{ pipeline_hostname }}"
    port: "{{ item.port }}"
    timeout: 10
    state: started
  with_items:
    - { port: 5432 }

- name: Truncate the database used by the Dashboard
  shell: >
    PGPASSWORD={{ master_password }} psql {{ master_username }} -d {{ master_dbname }}_dashboard -c
    "TRUNCATE TABLE component, metrics, dashboard_job CASCADE;"

#- name: Update the database used by the Dashboard (1/3)
#  shell: >
#    PGPASSWORD={{ master_password }} psql {{ master_username }} -d {{ master_dbname }}_dashboard -c 
#    "update component set component_name = 'template twitter crawler 1',
#    host = '{{ wsm_crawler_hostname }}',
#    admin_url = 'http://{{ wsm_crawler_fqdn }}:10010'
#    where component_type = 'twitter-crawler';"  
    
#- name: Update the database used by the Dashboard (2/3)
#  shell: >
#    PGPASSWORD={{ master_password }} psql {{ master_username }} -d {{ master_dbname }}_dashboard -c
#    "update component set component_name = 'template web crawler 1',
#    host = '{{ wsm_crawler_hostname }}',
#    admin_url = 'http://{{ wsm_crawler_fqdn }}:10010'
#    where component_type = 'web-crawler';"

#- name: Update the database used by the Dashboard (3/3)
#  shell: >
#    PGPASSWORD={{ master_password }} psql {{ master_username }} -d {{ master_dbname }}_dashboard -c
#    "update component set component_name = 'template pipeline 1',
#    host = '{{ pipeline_hostname }}',
#    admin_url = 'http://{{ pipeline_fqdn }}:7171'
#    where component_type = 'pipeline';"

- name: Restart InfoFusion Dashboard service
  systemd:
    state: restarted
    name: "{{ item.name }}"
  with_items:
    - { name: otif-dashboard-1 }

- name: Wait for Dashboard to be listening on port 10020
  wait_for:
    host: "{{ dashboard_hostname }}"
    port: "{{ item.port }}"
    delay: 5
    timeout: 10
    state: started
  with_items:
    - { port: 10020 }

- name:
  vars:
    msg: |
         InfoFusion Dashboard has beenreconfigured on {{dashboard_hostname}}.
         You can validate deployement by opening http://{{ dashboard_fqdn }}:10020
         or http://{{ ansible_host }}:10020
         Default credentials are admin/admin.
  debug:
    msg: "{{ msg.split('\n') }}"
