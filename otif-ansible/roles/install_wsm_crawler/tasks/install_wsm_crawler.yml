---
# tasks file for install_wsm_crawler

- name: Delete temp files ...
  shell: rm -rf /tmp/install.dir*

- name: Testing services dependencies -  Zookeeper, Kafka, MongoDB
  wait_for:
    host: "{{ item.hostname }}"
    port: "{{ item.port }}"
    delay: 5
    timeout: 10
    state: started
  with_items:
    - { hostname: "{{zookeeper_hostname}}", port: 2181 }
    - { hostname: "{{kafka_hostname}}", port: 9092 }
    - { hostname: "{{mongodb_hostname}}", port: 27017 }
  register: wait

- name: Mount DVD at {{ default_installer_location }}. WSM Crawler Installer is exepected to be there
  mount:
    path: "{{ default_installer_location }}"
    src: /dev/cdrom
    fstype: udf
    state: mounted

- name: Find WSM Crawler installer package in '{{ default_installer_location }}'
  find:
    paths: "{{ default_installer_location }}"
    patterns: "^.*crawler-web-social-media-installer.*\\.bin$"
    use_regex: yes
  register: crawler_installer

- fail:
    msg: "No WSM Crawler installer found in {{ default_installer_location }}"
  when: crawler_installer.matched == 0

- name: Install pexpect dependency
  become: true
  easy_install:
    name: "{{ item }}"
  with_items:
    - pexpect

- name: Check if WSM Crawler needs to be removed ...
  include_role:
    name: remove_wsm_crawler
    tasks_from: remove_wsm_crawler
  when: remove_wsm_crawler

- debug:
    msg: "WSM Crawler will be installed using '{{ crawler_installer.files[0].path }}'"

- debug:
    msg: "WSM Crawler will be installed in {{ crawler_installation_path }}"

- name: Executing WSM Crawler installer in console mode
  expect:
    command: "{{ crawler_installer.files[0].path }} -i console"
    echo: yes
    timeout: 60
    responses:
      .*to reach the end of this text.*: "skip"
      PRESS \<ENTER\> TO CONTINUE: ""
      .*DO YOU ACCEPT THE TERMS.*: "Y"
      .*Please choose a destination folder.*: "{{ crawler_installation_path }}"
      .*IS THIS CORRECT.*: "Y"
      .*unique suffix.*: "1"
      .*Run service as specified user.*: "0"
      .*Select Crawlers Component To Install.*: "1"
      .*Port Number.*: ""
      .*Please enter Provider.*: ""
      .*Please enter Database Host Name.*: "{{ ansible_hostname }}"
      .*Please enter Database for InfoFusion Crawler.*: "{{ master_dbname }}"
      .*Please enter Database Schema Name.*: ""
      .*Please enter Database User Name.*: "{{ master_username }}"
      .*Please enter Password.*: "{{ master_password }}"
      .*Please enter Zookeeper ensemble URL.*: "{{ zookeeper_hostname }}:2181"
      .*Please enter Twitter Service Name.*: ""
      .*Please enter Scheme.*: ""
      .*Please enter Twitter Service Host.*: "{{ ansible_hostname }}"
      .*Please enter Twitter Service Port.*: ""
      .*Please enter Kafka Client Id.*: ""
      .*Please enter Kafka URL.*: "{{ kafka_hostname }}:9092"
      .*Please enter Topic Name for Twitter.*: ""
      .*Please enter MongoDB Servers.*: "{{ mongodb_hostname }}:27017"
      .*Please enter Database Name.*: "{{ master_dbname }}"
      .*Please enter User Name.*: "{{ master_username }}"
      .*Please enter Password.*: "{{ master_password }}"
      .*Please enter Kafka Servers.*: "{{ kafka_hostname }}:9092"
      .*Please enter Crawler Web Service Name.*: ""
      .*Please enter Topic Name for Web Crawler.*: ""
      .*TO EXIT THE INSTALLER.*: ""
  register: installer_output

- debug:
    var: installer_output.stdout_lines

#- pause:
#    prompt: "TESTING"


