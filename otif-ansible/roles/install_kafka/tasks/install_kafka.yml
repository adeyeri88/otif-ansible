---

- name: Make sure download folder exists
  include_role: 
    name: common
    tasks_from: create_download_folder.yml

- name: Delete existing download 
  file:
    path: "{{ download_folder }}/{{ kafka_package_url | basename}}"
    state: absent
 
- name: Download Kafka package
  get_url:
    url: "{{ kafka_package_url }}"
    dest: "{{ download_folder }}"
    owner: "{{ playbook_user }}"
    group: "{{ playbook_user }}"
  register: kafka_package

- name: Create a group for Kafka user
  group:
    name: kafka
    state: present

- name: Create user that will run Kafka deamon
  user:
    name: kafka
    group: kafka
    comment: "This user manages Kafka deamon"    

- name: Extract Kafka from the package
  unarchive:
    src: "{{ kafka_package.dest }}"
    dest: "/opt"
    owner: kafka
    group: kafka
    

- name: Create a link for the Kafka install folder
  file:
    src: "/opt/{{ kafka_package.dest | basename | regex_replace('\\.[^.]+$') }}"
    dest: "/opt/kafka"
    state: link
    owner: kafka
    group: kafka

- name: Create working folder for Kafka & embedded Zookeeper
  file:
    path: "{{ item }}"
    owner: kafka
    group: kafka
    state: directory
  with_items:
    - "/var/lib/zookeeper"
    - "/var/lib/kafka"  
    
- name: Set Zookeeper working dir
  become: true
  lineinfile:
    dest: /opt/kafka/config/zookeeper.properties
    regexp: "^#?dataDir="
    line: "dataDir=/var/lib/zookeeper"

- name: Create service for Zookeeper
  copy:
    src: zookeeper.service
    dest: /etc/systemd/system/zookeeper.service
    backup: yes

- name: start Zookeeper service
  systemd:
   state: started
   daemon_reload: yes
   enabled: yes
   name: zookeeper

- name: Wait Zookeeper port 2181 is listening
  wait_for:
    host: "127.0.0.1"
    port: "2181"
    delay: 5
    state: started

- name: Configure kafka
  become: true
  lineinfile:
    dest: /opt/kafka/config/server.properties
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^#?listeners=", line: "listeners=PLAINTEXT://0.0.0.0:9092" }
    - { regexp: "^#?log.dirs=", line: "log.dirs=/var/lib/kafka/kafka-logs" }

- name: Create service for Kafka
  copy:
    src: kafka.service
    dest: /etc/systemd/system/kafka.service
    backup: yes

- name: start Kafka service
  systemd:
   state: started
   daemon_reload: yes
   enabled: yes
   name: kafka

- name: Wait Kafka port 9092 is listening
  wait_for:
    host: "127.0.0.1"
    port: "9092"
    delay: 5
    state: started

