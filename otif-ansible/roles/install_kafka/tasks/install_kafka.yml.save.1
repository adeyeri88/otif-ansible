---

- name: Find kafka installer package in '{{ default_installer_location }}'
  find:
    paths: "{{ default_installer_location }}"
    patterns: "^.*kafka.*\\.bin$"
    use_regex: yes
  register: kafka_installer

- fail:
    msg: "No kafka installer found in {{ default_installer_location }}"
  when: kafka_installer.matched == 0

- name: Make sure Kafka is removed if it exists
  block:

    - name: Check if Kafka is in the InstallAnywhere registry
      stat:
        path: /var/.com.zerog.registry.xml
      register: installanywhere_registry_is_there
    
    - name: If Registry is present ...
      block:

        - name: Look if kafka is already registred
          xml:
            path: /var/.com.zerog.registry.xml
            xpath: /registry/products/product//feature[@short_name='Kafka']
            count: yes
          register: hits
          when: installanywhere_registry_is_there.stat.exists == true

        - name: Get location where kafka is already installed
          xml:
            path: /var/.com.zerog.registry.xml
            xpath: /registry/products/product[@name='Kafka Server for OpenText InfoFusion']
            content: attribute
            attribute: location
          register: kafka_location
          when: hits.count > 0

        - debug:
            msg: "Kafka is already installed in {{ kafka_location.matches[0].product.location }}."
          when: hits.count > 0

        - name: Removing Kafka ...
          expect:
            command: "{{ kafka_installer.files[0].path }} -i console"
            echo: yes
            timeout: 30
            responses:
              .*Choose Instance Management Option.*: "2"
              .*Choose the instance to modify.*: "1"
              .*DEFAULT.*: "1"
              .*TO CONTINUE.*: ""
          when: hits.count > 0
`
        - name: Removing Kafka directory
          file:
            path: "{{ item }}"
            state: absent
          with_items:
            - "{{ kafka_location.matches[0].product.location }}"
          when: hits.count > 0  

      when: installanywhere_registry_is_there.stat.exists == true

  when: remove_kafka

- pause:
    prompt: "Kafka should not be there!"

- debug:
    msg: "Kafka will be installed using '{{ kafka_installer.files[0].path }}'"

- debug:
    msg: "Kafka will be installed in {{ kafka_destination_path }}"

#- pause:
#    prompt: "PRESS <ENTER> TO START"

- name: Install pexpect dependency
  become: true
  easy_install:
    name: "{{ item }}" 
    state: latest
  with_items:
    - ptyprocess
    - pexpect

- name: Execute Kafka installer in console mode
  expect:
    command: "{{ kafka_installer.files[0].path }} -i console"
    echo: yes
    timeout: 30
    responses:
      .*TO CONTINUE.*: ""
      .*to reach the end of this text.*: "skip"
      .*DO YOU ACCEPT THE TERMS.*: "Y"
      .*ENTER AN ABSOLUTE PATH.*: "{{ kafka_destination_path }}"
      .*IS THIS CORRECT.*: "Y"
      .*Current Host.*: ""
      .*Zookeeper Host.*: "{{ zookeeper_hostname }}"
      .*YOUR CHOICE.*: "1"
      .*EXIT THE INSTALLER.*: ""

- name: Wait Kafka to be listening on port 9092 
  wait_for:
    host: "127.0.0.1"
    port: "{{ item }}"
    delay: 5
    state: started
  with_items:
    - "9092"
