---

- name: Wait until Zookeeper is listening on port 2181 (mandatory)
  wait_for:
    host: "{{ zookeeper_hostname }}"
    port: "{{ item.port }}"
    delay: 5
    timeout: 10
    state: started
  with_items:
    - { port: 2181 }
  register: wait
  when: not skip_zk

- name: Mount DVD at {{ default_installer_location }}. The Kafka installer is meant to be there.
  mount:
    path: "{{ default_installer_location }}"
    src: /dev/cdrom
    fstype: udf
    state: mounted
  when: installation_method == "iso"

- name: Download Package ...
  block:

    - name: Make sure destination folder exists
      file:
        path: "{{ default_installer_location }}"
        state: directory
        recurse: yes

    - name: Download Kafka from Nexus @ {{ download_kafka }} ...
      get_url:
        url: "{{ download_kafka }}"
        dest: "{{ default_installer_location }}/{{ download_kafka | basename }}"
        mode: a+x

  when: installation_method == "download"

- name: Install Python dependencies ...
  yum:
    name: "{{ item }}"
  with_items:
    - python-setuptools
    - gcc
    - make
    - python-devel
    - libxml2-devel
    - libxslt-devel

- name: Install Python libraries ...
  become: true
  easy_install:
    name: "{{ item }}"
  with_items:
    - lxml

- name: Install pexpect dependency
  become: true
  ignore_errors: yes
  easy_install:
    name: pexpect
  register: pexpect_result

- name: Fallback in case previous easy_install pexect didn't work
  command: easy_install pexpect
  when: pexpect_result.failed == true

- name: Find kafka installer package in '{{ default_installer_location }}'
  find:
    paths: "{{ default_installer_location }}"
    patterns: "^.*kafka.*\\.bin$"
    use_regex: yes
  register: found_installers

- fail:
    msg: "No kafka installer found in {{ default_installer_location }}"
  when: found_installers.matched == 0

- name: Get latest file
  set_fact:
    kafka_installer: "{{ found_installers.files | sort(attribute='mtime',reverse=true) | first }}"

