---
# tasks file for remove_wsm_crawler.yml

- name: Make sure Crawler for Web & Social Media is removed if it exists
  block:

    - name: Check if WSM Crawler is in the InstallAnywhere registry
      stat:
        path: /var/.com.zerog.registry.xml
      register: installanywhere_registry_is_there

    - name: If Registry is present ...
      block:

      - name: Look if WSM Crawler is already registred
        xml:
          path: /var/.com.zerog.registry.xml
          xpath: /registry/products/product[@name='InfoFusion Web and Social Media Crawler']
          count: yes
        register: hits
        when: installanywhere_registry_is_there.stat.exists == true

      - name: Get location where WSM Crawler is already installed
        xml:
          path: /var/.com.zerog.registry.xml
          xpath: /registry/products/product[@name='InfoFusion Web and Social Media Crawler']
          content: attribute
          attribute: location
        register: crawler_location
        when: hits.count > 0

      - debug:
          msg: "WSM Crawler is already installed in {{ crawler_location.matches[0].product.location }}."
        when: hits.count > 0

      - name: Removing WSM Crawler ...
        expect:
          command: "{{ crawler_installer.files[0].path }} -i console"
          echo: yes
          timeout: 60
          responses:
            .*Choose Instance Management Option.*: "2"
            .*Choose the instance to modify.*: "1"
            .*DEFAULT.*: "1"
            .*TO CONTINUE.*: ""
        when: hits.count > 0

      - name: Removing WSM Crawler directory
        file:
          path: "{{ item }}"
          state: absent
        with_items:
          - "{{ crawler_location.matches[0].product.location }}"
        when: hits.count > 0

      when: installanywhere_registry_is_there.stat.exists == true

    - name: Remove reference to WSM Crawler in Zookeeper
      block:

        - name: Install kazoo dependency - needed for the Ansible znode module used to talk to Zookeeper
          become: true
          easy_install:
            name: kazoo
            state: latest

        - name: Remove WSM Crawler from Service Discovery
          znode:
            hosts: "{{ zookeeper_hostname }}:2181"
            name: "{{ item }}"
            recursive: true
            state: absent
          with_items:
            - /ot/service-registry/crawler-twitter

      when: cleanup_zookeeper

    - name: Creating PostgreSQL backup (support for PostgreSQL only)
      block:
        
        - name: Create backup folder if it does not exist
          file:
            path: "{{ default_installation_path }}/postgres_backup"
            state: directory
            mode: "u=rw,g=r,o=r"

        - name: Backup database {{ master_dbname }}_wsm (create a backup in folder {{ default_installation_path }}/postgres_backup/)
          postgresql_db:
            name: "{{ master_dbname }}_wsm"
            login_user: "{{ master_username }}"
            login_password: "{{ master_password }}"
            state: dump
            target: "{{ default_installation_path }}/postgres_backup/psql-wsm-crawler-{{ansible_hostname}}-{{ master_dbname }}.{{ timestamp }}.sql.gz"

        - debug:
            msg: |
              Backup created in {{ default_installation_path }}/postgres_backup/.
              Can be used with pg_restore.

      when: backup_database and custom_data_location is not defined

    - name: Creating PostgreSQL backup in custom data location (support for PostgreSQL only)
      block:

        - name: Create backup folder if it does not exist
          file:
            path: "{{ custom_data_location}}/postgres_backup"
            state: directory
            mode: "u=rw,g=r,o=r"

        - name: Backup database {{ master_dbname }}_wsm (create a backup in folder {{ custom_data_location}}/postgres_backup/)
          postgresql_db:
            name: "{{ master_dbname }}_wsm"
            login_user: "{{ master_username }}"
            login_password: "{{ master_password }}"
            state: dump
            target: "{{custom_data_location}}/postgres_backup/psql-{{ansible_hostname}}-{{ master_dbname }}.{{ timestamp }}.sql.gz"

        - debug:
            msg: |
              Backup created in {{ custom_data_location }}/postgres_backup/.
              Can be used with pg_restore.

      when: backup_database and custom_data_location is defined

    - name: Dropping PostgreSQL database {{ master_dbname }} ...
      block:

        - name: Drop database {{ master_dbname }}_wsm (support for PostgreSQL only)
          postgresql_db:
            name: "{{ master_dbname }}_wsm"
            login_user: "{{ master_username }}"
            login_password: "{{ master_password }}"
            state: absent          

      when: drop_database

    - pause:
        prompt: "Crawler for Web & Social Media should not be on {{ansible_hostname}} anymore!"
      when: with_pause

  when: remove_wsm_crawler





