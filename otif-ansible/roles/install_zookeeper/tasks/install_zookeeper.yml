---
# tasks file for install_zookeeper

- name: Mount DVD read-only
  mount:
    path: /mnt/dvd
    src: /dev/cdrom
    fstype: udf
    state: mounted

- name: Find zookeeper installer package in '{{ default_installer_location }}'
  find:
    paths: "{{ default_installer_location }}"
    patterns: "^.*zookeeper.*\\.bin$"
    use_regex: yes
  register: zookeeper_installer

- fail:
    msg: "No Zookeeper installer found in {{ default_installer_location }}"
  when: zookeeper_installer.matched == 0 

- name: Install pexpect dependency
  become: true
  easy_install:
    name: "{{ item }}"
  with_items:
    - pexpect

- name: Make sure Zookeeper is removed if it exists
  block:
    
    - name: Check if zookeeper is in the InstallAnywhere registry
      stat:
        path: /var/.com.zerog.registry.xml
      register: installanywhere_registry_is_there

    - name: If Registry is present ...
      block:

      - name: Look if Zookeeper is already registred
        xml:
          path: /var/.com.zerog.registry.xml
          xpath: /registry/products/product//feature[@short_name='Zookeeper']
          count: yes
        register: hits
        when: installanywhere_registry_is_there.stat.exists == true

      - name: Get location where Zookeeper is already installed
        xml:
          path: /var/.com.zerog.registry.xml
          xpath: /registry/products/product[@name='Zookeeper for OpenText InfoFusion']
          content: attribute
          attribute: location
        register: zk_location
        when: hits.count > 0

      - debug:
          msg: "Zookeeper is already installed in {{ zk_location.matches[0].product.location }}."
        when: hits.count > 0
    
      - name: Removing Zookeeper ...
        expect:
          command: "{{ zookeeper_installer.files[0].path }} -i console"
          echo: yes
          timeout: 30
          responses: 
            .*Choose Instance Management Option.*: "2"
            .*Choose the instance to modify.*: "1"
            .*DEFAULT.*: "1"
            .*TO CONTINUE.*: ""  
        when: hits.count > 0
 
      - name: Removing Zookeeper directory
        file:
          path: "{{ item }}"
          state: absent
        with_items:
          - "{{ zk_location.matches[0].product.location }}"        
        when: hits.count > 0

      when: installanywhere_registry_is_there.stat.exists == true

  when: remove_zookeeper

#- pause:
#    prompt: "Zookeeper should not be there!"

- debug:
    msg: "Zookeeper will be installed using '{{ zookeeper_installer.files[0].path }}'"

- debug:
    msg: "Zookeeper will be installed in {{ zookeeper_destination_path }}"

#- pause:
#    prompt: "PRESS <ENTER> TO START"

- name: Executing Zookeeper installer in console mode
  expect:
    command: "{{ zookeeper_installer.files[0].path }} -i console"
    echo: yes
    timeout: 30
    responses:
      .*to reach the end of this text.*: "skip"
      PRESS \<ENTER\> TO CONTINUE: ""
      .*DO YOU ACCEPT THE TERMS.*: "Y"
      .*ENTER AN ABSOLUTE PATH.*: "{{ zookeeper_destination_path }}"
      .*IS THIS CORRECT.*: "Y"
      .*Current Host.*: ""
      .*TO ACCEPT THE DEFAULT.*: ""
      '.*TO EXIT THE INSTALLER.*': ""


