---

- name: Create and configure services for InfoFusion Dashboard
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: otif-dashboard.service.j2, dest: /etc/systemd/system/otif-dashboard.service }
    - { src: server.xml.j2, dest: "{{ dashboard_target_dir }}/conf/server.xml" }

- name: Create database if not already there (mandatory for the installation)
  postgresql_db:
    login_user: "postgres"
    login_password: "{{psql_admin_password}}"
    name: "{{master_dbname}}_dashboard"
    owner: "{{master_username}}"
    encoding: UTF-8
    state: present

- name: Set Dashboard API configuration"
  become: true
  lineinfile:
    dest: "{{ dashboard_target_dir }}/etc/dashboard-api.properties"
    regexp: "{{item.regexp }}" 
    line: "{{item.line}}"
  with_items:
    - { regexp: "driverClassName=", line: "dashboard.persistence.pool.properties.driverClassName=org.postgresql.Driver" }
    - { regexp: "url=", line: "dashboard.persistence.pool.properties.url=jdbc:postgresql://{{ dashboard_fqdn }}:5432/{{ master_dbname }}_dashboard" }
    - { regexp: "username=", line: "dashboard.persistence.pool.properties.username={{ master_username}}" }
    - { regexp: "password=", line: "dashboard.persistence.pool.properties.password={{ master_password}}" }

- name: Set Dashboard Deamon configuration"
  become: true
  lineinfile:
    dest: "{{ dashboard_target_dir }}/etc/otif-system.properties"
    regexp: "{{item.regexp }}"
    line: "{{item.line}}"
  with_items:
    - { regexp: "^[\.*]deamon.name=", line: "dashboard.daemon.name=otif-dashboard-1" }
    - { regexp: "^[\.*]deamon.long.name=", line: "dashboard.daemon.long.name=OpenText InfoFusion Dashboard 1" }
    - { regexp: "^[\.*]deamon.user=", line: "dashboard.daemon.user={{master_username}}" }

- name: Open port 10020
  ignore_errors: true
  become: true
  firewalld:
    zone: public
    port: "{{item}}/tcp"
    permanent: true
    immediate: true
    state: enabled
  with_items:
    - "10020"

- name: Initialize the database used by the Dashboard
  shell: "{{ item.command }}"
  with_items:
    - { command: "PGPASSWORD={{ master_password }} psql {{ master_username }} -d {{ master_dbname }}_dashboard -f {{ dashboard_target_dir }}/etc/otif-dashboard-schema.sql" }
  
